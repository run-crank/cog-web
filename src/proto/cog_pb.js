// source: cog.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.automaton.cog.BinaryRecord', null, global);
goog.exportSymbol('proto.automaton.cog.CogManifest', null, global);
goog.exportSymbol('proto.automaton.cog.FieldDefinition', null, global);
goog.exportSymbol('proto.automaton.cog.FieldDefinition.Optionality', null, global);
goog.exportSymbol('proto.automaton.cog.FieldDefinition.Type', null, global);
goog.exportSymbol('proto.automaton.cog.ManifestRequest', null, global);
goog.exportSymbol('proto.automaton.cog.RecordDefinition', null, global);
goog.exportSymbol('proto.automaton.cog.RecordDefinition.Type', null, global);
goog.exportSymbol('proto.automaton.cog.RunStepRequest', null, global);
goog.exportSymbol('proto.automaton.cog.RunStepResponse', null, global);
goog.exportSymbol('proto.automaton.cog.RunStepResponse.Outcome', null, global);
goog.exportSymbol('proto.automaton.cog.Step', null, global);
goog.exportSymbol('proto.automaton.cog.StepDefinition', null, global);
goog.exportSymbol('proto.automaton.cog.StepDefinition.Type', null, global);
goog.exportSymbol('proto.automaton.cog.StepRecord', null, global);
goog.exportSymbol('proto.automaton.cog.StepRecord.ValueCase', null, global);
goog.exportSymbol('proto.automaton.cog.TableRecord', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.ManifestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.automaton.cog.ManifestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.ManifestRequest.displayName = 'proto.automaton.cog.ManifestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.CogManifest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.automaton.cog.CogManifest.repeatedFields_, null);
};
goog.inherits(proto.automaton.cog.CogManifest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.CogManifest.displayName = 'proto.automaton.cog.CogManifest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.StepDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.automaton.cog.StepDefinition.repeatedFields_, null);
};
goog.inherits(proto.automaton.cog.StepDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.StepDefinition.displayName = 'proto.automaton.cog.StepDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.FieldDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.automaton.cog.FieldDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.FieldDefinition.displayName = 'proto.automaton.cog.FieldDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.RecordDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.automaton.cog.RecordDefinition.repeatedFields_, null);
};
goog.inherits(proto.automaton.cog.RecordDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.RecordDefinition.displayName = 'proto.automaton.cog.RecordDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.RunStepRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.automaton.cog.RunStepRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.RunStepRequest.displayName = 'proto.automaton.cog.RunStepRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.Step = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.automaton.cog.Step, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.Step.displayName = 'proto.automaton.cog.Step';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.RunStepResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.automaton.cog.RunStepResponse.repeatedFields_, null);
};
goog.inherits(proto.automaton.cog.RunStepResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.RunStepResponse.displayName = 'proto.automaton.cog.RunStepResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.StepRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.automaton.cog.StepRecord.oneofGroups_);
};
goog.inherits(proto.automaton.cog.StepRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.StepRecord.displayName = 'proto.automaton.cog.StepRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.TableRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.automaton.cog.TableRecord.repeatedFields_, null);
};
goog.inherits(proto.automaton.cog.TableRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.TableRecord.displayName = 'proto.automaton.cog.TableRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.automaton.cog.BinaryRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.automaton.cog.BinaryRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.automaton.cog.BinaryRecord.displayName = 'proto.automaton.cog.BinaryRecord';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.ManifestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.ManifestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.ManifestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.ManifestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.ManifestRequest}
 */
proto.automaton.cog.ManifestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.ManifestRequest;
  return proto.automaton.cog.ManifestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.ManifestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.ManifestRequest}
 */
proto.automaton.cog.ManifestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.ManifestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.ManifestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.ManifestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.ManifestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.automaton.cog.CogManifest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.CogManifest.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.CogManifest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.CogManifest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.CogManifest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 5, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    homepage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    stepDefinitionsList: jspb.Message.toObjectList(msg.getStepDefinitionsList(),
    proto.automaton.cog.StepDefinition.toObject, includeInstance),
    authFieldsList: jspb.Message.toObjectList(msg.getAuthFieldsList(),
    proto.automaton.cog.FieldDefinition.toObject, includeInstance),
    authHelpUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.CogManifest}
 */
proto.automaton.cog.CogManifest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.CogManifest;
  return proto.automaton.cog.CogManifest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.CogManifest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.CogManifest}
 */
proto.automaton.cog.CogManifest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomepage(value);
      break;
    case 3:
      var value = new proto.automaton.cog.StepDefinition;
      reader.readMessage(value,proto.automaton.cog.StepDefinition.deserializeBinaryFromReader);
      msg.addStepDefinitions(value);
      break;
    case 4:
      var value = new proto.automaton.cog.FieldDefinition;
      reader.readMessage(value,proto.automaton.cog.FieldDefinition.deserializeBinaryFromReader);
      msg.addAuthFields(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthHelpUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.CogManifest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.CogManifest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.CogManifest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.CogManifest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHomepage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStepDefinitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.automaton.cog.StepDefinition.serializeBinaryToWriter
    );
  }
  f = message.getAuthFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.automaton.cog.FieldDefinition.serializeBinaryToWriter
    );
  }
  f = message.getAuthHelpUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.automaton.cog.CogManifest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.automaton.cog.CogManifest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.automaton.cog.CogManifest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string homepage = 6;
 * @return {string}
 */
proto.automaton.cog.CogManifest.prototype.getHomepage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.setHomepage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated StepDefinition step_definitions = 3;
 * @return {!Array<!proto.automaton.cog.StepDefinition>}
 */
proto.automaton.cog.CogManifest.prototype.getStepDefinitionsList = function() {
  return /** @type{!Array<!proto.automaton.cog.StepDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.StepDefinition, 3));
};


/**
 * @param {!Array<!proto.automaton.cog.StepDefinition>} value
 * @return {!proto.automaton.cog.CogManifest} returns this
*/
proto.automaton.cog.CogManifest.prototype.setStepDefinitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.automaton.cog.StepDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.StepDefinition}
 */
proto.automaton.cog.CogManifest.prototype.addStepDefinitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.automaton.cog.StepDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.clearStepDefinitionsList = function() {
  return this.setStepDefinitionsList([]);
};


/**
 * repeated FieldDefinition auth_fields = 4;
 * @return {!Array<!proto.automaton.cog.FieldDefinition>}
 */
proto.automaton.cog.CogManifest.prototype.getAuthFieldsList = function() {
  return /** @type{!Array<!proto.automaton.cog.FieldDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.FieldDefinition, 4));
};


/**
 * @param {!Array<!proto.automaton.cog.FieldDefinition>} value
 * @return {!proto.automaton.cog.CogManifest} returns this
*/
proto.automaton.cog.CogManifest.prototype.setAuthFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.automaton.cog.FieldDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.FieldDefinition}
 */
proto.automaton.cog.CogManifest.prototype.addAuthFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.automaton.cog.FieldDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.clearAuthFieldsList = function() {
  return this.setAuthFieldsList([]);
};


/**
 * optional string auth_help_url = 7;
 * @return {string}
 */
proto.automaton.cog.CogManifest.prototype.getAuthHelpUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.CogManifest} returns this
 */
proto.automaton.cog.CogManifest.prototype.setAuthHelpUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.automaton.cog.StepDefinition.repeatedFields_ = [4,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.StepDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.StepDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.StepDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.StepDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expression: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expectedFieldsList: jspb.Message.toObjectList(msg.getExpectedFieldsList(),
    proto.automaton.cog.FieldDefinition.toObject, includeInstance),
    expectedRecordsList: jspb.Message.toObjectList(msg.getExpectedRecordsList(),
    proto.automaton.cog.RecordDefinition.toObject, includeInstance),
    actionList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    targetObject: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.StepDefinition}
 */
proto.automaton.cog.StepDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.StepDefinition;
  return proto.automaton.cog.StepDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.StepDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.StepDefinition}
 */
proto.automaton.cog.StepDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 5:
      var value = /** @type {!proto.automaton.cog.StepDefinition.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    case 4:
      var value = new proto.automaton.cog.FieldDefinition;
      reader.readMessage(value,proto.automaton.cog.FieldDefinition.deserializeBinaryFromReader);
      msg.addExpectedFields(value);
      break;
    case 7:
      var value = new proto.automaton.cog.RecordDefinition;
      reader.readMessage(value,proto.automaton.cog.RecordDefinition.deserializeBinaryFromReader);
      msg.addExpectedRecords(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addAction(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetObject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.StepDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.StepDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.StepDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.StepDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpectedFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.automaton.cog.FieldDefinition.serializeBinaryToWriter
    );
  }
  f = message.getExpectedRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.automaton.cog.RecordDefinition.serializeBinaryToWriter
    );
  }
  f = message.getActionList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getTargetObject();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.automaton.cog.StepDefinition.Type = {
  ACTION: 0,
  VALIDATION: 1
};

/**
 * optional string step_id = 1;
 * @return {string}
 */
proto.automaton.cog.StepDefinition.prototype.getStepId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setStepId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.automaton.cog.StepDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.automaton.cog.StepDefinition.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Type type = 5;
 * @return {!proto.automaton.cog.StepDefinition.Type}
 */
proto.automaton.cog.StepDefinition.prototype.getType = function() {
  return /** @type {!proto.automaton.cog.StepDefinition.Type} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.automaton.cog.StepDefinition.Type} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string expression = 3;
 * @return {string}
 */
proto.automaton.cog.StepDefinition.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setExpression = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated FieldDefinition expected_fields = 4;
 * @return {!Array<!proto.automaton.cog.FieldDefinition>}
 */
proto.automaton.cog.StepDefinition.prototype.getExpectedFieldsList = function() {
  return /** @type{!Array<!proto.automaton.cog.FieldDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.FieldDefinition, 4));
};


/**
 * @param {!Array<!proto.automaton.cog.FieldDefinition>} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
*/
proto.automaton.cog.StepDefinition.prototype.setExpectedFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.automaton.cog.FieldDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.FieldDefinition}
 */
proto.automaton.cog.StepDefinition.prototype.addExpectedFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.automaton.cog.FieldDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.clearExpectedFieldsList = function() {
  return this.setExpectedFieldsList([]);
};


/**
 * repeated RecordDefinition expected_records = 7;
 * @return {!Array<!proto.automaton.cog.RecordDefinition>}
 */
proto.automaton.cog.StepDefinition.prototype.getExpectedRecordsList = function() {
  return /** @type{!Array<!proto.automaton.cog.RecordDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.RecordDefinition, 7));
};


/**
 * @param {!Array<!proto.automaton.cog.RecordDefinition>} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
*/
proto.automaton.cog.StepDefinition.prototype.setExpectedRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.automaton.cog.RecordDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.RecordDefinition}
 */
proto.automaton.cog.StepDefinition.prototype.addExpectedRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.automaton.cog.RecordDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.clearExpectedRecordsList = function() {
  return this.setExpectedRecordsList([]);
};


/**
 * repeated string action = 8;
 * @return {!Array<string>}
 */
proto.automaton.cog.StepDefinition.prototype.getActionList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setActionList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.addAction = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.clearActionList = function() {
  return this.setActionList([]);
};


/**
 * optional string target_object = 9;
 * @return {string}
 */
proto.automaton.cog.StepDefinition.prototype.getTargetObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepDefinition} returns this
 */
proto.automaton.cog.StepDefinition.prototype.setTargetObject = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.FieldDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.FieldDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.FieldDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.FieldDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optionality: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bulksupport: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.FieldDefinition}
 */
proto.automaton.cog.FieldDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.FieldDefinition;
  return proto.automaton.cog.FieldDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.FieldDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.FieldDefinition}
 */
proto.automaton.cog.FieldDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.automaton.cog.FieldDefinition.Optionality} */ (reader.readEnum());
      msg.setOptionality(value);
      break;
    case 3:
      var value = /** @type {!proto.automaton.cog.FieldDefinition.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBulksupport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.FieldDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.FieldDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.FieldDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.FieldDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptionality();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBulksupport();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.automaton.cog.FieldDefinition.Optionality = {
  OPTIONAL: 0,
  REQUIRED: 1
};

/**
 * @enum {number}
 */
proto.automaton.cog.FieldDefinition.Type = {
  ANYSCALAR: 0,
  STRING: 1,
  BOOLEAN: 2,
  NUMERIC: 3,
  DATE: 4,
  DATETIME: 5,
  EMAIL: 6,
  PHONE: 7,
  URL: 10,
  ANYNONSCALAR: 8,
  MAP: 9
};

/**
 * optional string key = 1;
 * @return {string}
 */
proto.automaton.cog.FieldDefinition.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Optionality optionality = 2;
 * @return {!proto.automaton.cog.FieldDefinition.Optionality}
 */
proto.automaton.cog.FieldDefinition.prototype.getOptionality = function() {
  return /** @type {!proto.automaton.cog.FieldDefinition.Optionality} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.automaton.cog.FieldDefinition.Optionality} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setOptionality = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.automaton.cog.FieldDefinition.Type}
 */
proto.automaton.cog.FieldDefinition.prototype.getType = function() {
  return /** @type {!proto.automaton.cog.FieldDefinition.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.automaton.cog.FieldDefinition.Type} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.automaton.cog.FieldDefinition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.automaton.cog.FieldDefinition.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool bulksupport = 6;
 * @return {boolean}
 */
proto.automaton.cog.FieldDefinition.prototype.getBulksupport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.automaton.cog.FieldDefinition} returns this
 */
proto.automaton.cog.FieldDefinition.prototype.setBulksupport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.automaton.cog.RecordDefinition.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.RecordDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.RecordDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.RecordDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RecordDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    guaranteedFieldsList: jspb.Message.toObjectList(msg.getGuaranteedFieldsList(),
    proto.automaton.cog.FieldDefinition.toObject, includeInstance),
    mayHaveMoreFields: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.RecordDefinition}
 */
proto.automaton.cog.RecordDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.RecordDefinition;
  return proto.automaton.cog.RecordDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.RecordDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.RecordDefinition}
 */
proto.automaton.cog.RecordDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.automaton.cog.RecordDefinition.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.automaton.cog.FieldDefinition;
      reader.readMessage(value,proto.automaton.cog.FieldDefinition.deserializeBinaryFromReader);
      msg.addGuaranteedFields(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMayHaveMoreFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.RecordDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.RecordDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.RecordDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RecordDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getGuaranteedFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.automaton.cog.FieldDefinition.serializeBinaryToWriter
    );
  }
  f = message.getMayHaveMoreFields();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.automaton.cog.RecordDefinition.Type = {
  KEYVALUE: 0,
  TABLE: 1,
  BINARY: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.automaton.cog.RecordDefinition.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.RecordDefinition} returns this
 */
proto.automaton.cog.RecordDefinition.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.automaton.cog.RecordDefinition.Type}
 */
proto.automaton.cog.RecordDefinition.prototype.getType = function() {
  return /** @type {!proto.automaton.cog.RecordDefinition.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.automaton.cog.RecordDefinition.Type} value
 * @return {!proto.automaton.cog.RecordDefinition} returns this
 */
proto.automaton.cog.RecordDefinition.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated FieldDefinition guaranteed_fields = 3;
 * @return {!Array<!proto.automaton.cog.FieldDefinition>}
 */
proto.automaton.cog.RecordDefinition.prototype.getGuaranteedFieldsList = function() {
  return /** @type{!Array<!proto.automaton.cog.FieldDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.FieldDefinition, 3));
};


/**
 * @param {!Array<!proto.automaton.cog.FieldDefinition>} value
 * @return {!proto.automaton.cog.RecordDefinition} returns this
*/
proto.automaton.cog.RecordDefinition.prototype.setGuaranteedFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.automaton.cog.FieldDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.FieldDefinition}
 */
proto.automaton.cog.RecordDefinition.prototype.addGuaranteedFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.automaton.cog.FieldDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.RecordDefinition} returns this
 */
proto.automaton.cog.RecordDefinition.prototype.clearGuaranteedFieldsList = function() {
  return this.setGuaranteedFieldsList([]);
};


/**
 * optional bool may_have_more_fields = 4;
 * @return {boolean}
 */
proto.automaton.cog.RecordDefinition.prototype.getMayHaveMoreFields = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.automaton.cog.RecordDefinition} returns this
 */
proto.automaton.cog.RecordDefinition.prototype.setMayHaveMoreFields = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.RunStepRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.RunStepRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.RunStepRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RunStepRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    step: (f = msg.getStep()) && proto.automaton.cog.Step.toObject(includeInstance, f),
    requestId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scenarioId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestorId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.RunStepRequest}
 */
proto.automaton.cog.RunStepRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.RunStepRequest;
  return proto.automaton.cog.RunStepRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.RunStepRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.RunStepRequest}
 */
proto.automaton.cog.RunStepRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.automaton.cog.Step;
      reader.readMessage(value,proto.automaton.cog.Step.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestorId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.RunStepRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.RunStepRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.RunStepRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RunStepRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.automaton.cog.Step.serializeBinaryToWriter
    );
  }
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScenarioId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestorId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Step step = 1;
 * @return {?proto.automaton.cog.Step}
 */
proto.automaton.cog.RunStepRequest.prototype.getStep = function() {
  return /** @type{?proto.automaton.cog.Step} */ (
    jspb.Message.getWrapperField(this, proto.automaton.cog.Step, 1));
};


/**
 * @param {?proto.automaton.cog.Step|undefined} value
 * @return {!proto.automaton.cog.RunStepRequest} returns this
*/
proto.automaton.cog.RunStepRequest.prototype.setStep = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.RunStepRequest} returns this
 */
proto.automaton.cog.RunStepRequest.prototype.clearStep = function() {
  return this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.RunStepRequest.prototype.hasStep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string request_id = 2;
 * @return {string}
 */
proto.automaton.cog.RunStepRequest.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.RunStepRequest} returns this
 */
proto.automaton.cog.RunStepRequest.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scenario_id = 3;
 * @return {string}
 */
proto.automaton.cog.RunStepRequest.prototype.getScenarioId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.RunStepRequest} returns this
 */
proto.automaton.cog.RunStepRequest.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string requestor_id = 4;
 * @return {string}
 */
proto.automaton.cog.RunStepRequest.prototype.getRequestorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.RunStepRequest} returns this
 */
proto.automaton.cog.RunStepRequest.prototype.setRequestorId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.Step.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.Step.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.Step} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.Step.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.Step}
 */
proto.automaton.cog.Step.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.Step;
  return proto.automaton.cog.Step.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.Step} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.Step}
 */
proto.automaton.cog.Step.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepId(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.Step.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.Step.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.Step} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.Step.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string step_id = 1;
 * @return {string}
 */
proto.automaton.cog.Step.prototype.getStepId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.Step} returns this
 */
proto.automaton.cog.Step.prototype.setStepId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.automaton.cog.Step.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.automaton.cog.Step} returns this
*/
proto.automaton.cog.Step.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.Step} returns this
 */
proto.automaton.cog.Step.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.Step.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.automaton.cog.RunStepResponse.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.RunStepResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.RunStepResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.RunStepResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RunStepResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outcome: jspb.Message.getFieldWithDefault(msg, 1, 0),
    messageFormat: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageArgsList: jspb.Message.toObjectList(msg.getMessageArgsList(),
    google_protobuf_struct_pb.Value.toObject, includeInstance),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.automaton.cog.StepRecord.toObject, includeInstance),
    responseData: (f = msg.getResponseData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.RunStepResponse}
 */
proto.automaton.cog.RunStepResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.RunStepResponse;
  return proto.automaton.cog.RunStepResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.RunStepResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.RunStepResponse}
 */
proto.automaton.cog.RunStepResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.automaton.cog.RunStepResponse.Outcome} */ (reader.readEnum());
      msg.setOutcome(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageFormat(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.addMessageArgs(value);
      break;
    case 5:
      var value = new proto.automaton.cog.StepRecord;
      reader.readMessage(value,proto.automaton.cog.StepRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setResponseData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.RunStepResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.RunStepResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.RunStepResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.RunStepResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutcome();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessageFormat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageArgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.automaton.cog.StepRecord.serializeBinaryToWriter
    );
  }
  f = message.getResponseData();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.automaton.cog.RunStepResponse.Outcome = {
  PASSED: 0,
  FAILED: 1,
  ERROR: 2
};

/**
 * optional Outcome outcome = 1;
 * @return {!proto.automaton.cog.RunStepResponse.Outcome}
 */
proto.automaton.cog.RunStepResponse.prototype.getOutcome = function() {
  return /** @type {!proto.automaton.cog.RunStepResponse.Outcome} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.automaton.cog.RunStepResponse.Outcome} value
 * @return {!proto.automaton.cog.RunStepResponse} returns this
 */
proto.automaton.cog.RunStepResponse.prototype.setOutcome = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message_format = 2;
 * @return {string}
 */
proto.automaton.cog.RunStepResponse.prototype.getMessageFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.RunStepResponse} returns this
 */
proto.automaton.cog.RunStepResponse.prototype.setMessageFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated google.protobuf.Value message_args = 3;
 * @return {!Array<!proto.google.protobuf.Value>}
 */
proto.automaton.cog.RunStepResponse.prototype.getMessageArgsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Value, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Value>} value
 * @return {!proto.automaton.cog.RunStepResponse} returns this
*/
proto.automaton.cog.RunStepResponse.prototype.setMessageArgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Value}
 */
proto.automaton.cog.RunStepResponse.prototype.addMessageArgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.RunStepResponse} returns this
 */
proto.automaton.cog.RunStepResponse.prototype.clearMessageArgsList = function() {
  return this.setMessageArgsList([]);
};


/**
 * repeated StepRecord records = 5;
 * @return {!Array<!proto.automaton.cog.StepRecord>}
 */
proto.automaton.cog.RunStepResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.automaton.cog.StepRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.automaton.cog.StepRecord, 5));
};


/**
 * @param {!Array<!proto.automaton.cog.StepRecord>} value
 * @return {!proto.automaton.cog.RunStepResponse} returns this
*/
proto.automaton.cog.RunStepResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.automaton.cog.StepRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.automaton.cog.StepRecord}
 */
proto.automaton.cog.RunStepResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.automaton.cog.StepRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.RunStepResponse} returns this
 */
proto.automaton.cog.RunStepResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional google.protobuf.Struct response_data = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.automaton.cog.RunStepResponse.prototype.getResponseData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.automaton.cog.RunStepResponse} returns this
*/
proto.automaton.cog.RunStepResponse.prototype.setResponseData = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.RunStepResponse} returns this
 */
proto.automaton.cog.RunStepResponse.prototype.clearResponseData = function() {
  return this.setResponseData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.RunStepResponse.prototype.hasResponseData = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.automaton.cog.StepRecord.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.automaton.cog.StepRecord.ValueCase = {
  VALUE_NOT_SET: 0,
  KEY_VALUE: 3,
  TABLE: 4,
  BINARY: 5
};

/**
 * @return {proto.automaton.cog.StepRecord.ValueCase}
 */
proto.automaton.cog.StepRecord.prototype.getValueCase = function() {
  return /** @type {proto.automaton.cog.StepRecord.ValueCase} */(jspb.Message.computeOneofCase(this, proto.automaton.cog.StepRecord.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.StepRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.StepRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.StepRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.StepRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keyValue: (f = msg.getKeyValue()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    table: (f = msg.getTable()) && proto.automaton.cog.TableRecord.toObject(includeInstance, f),
    binary: (f = msg.getBinary()) && proto.automaton.cog.BinaryRecord.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.StepRecord}
 */
proto.automaton.cog.StepRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.StepRecord;
  return proto.automaton.cog.StepRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.StepRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.StepRecord}
 */
proto.automaton.cog.StepRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setKeyValue(value);
      break;
    case 4:
      var value = new proto.automaton.cog.TableRecord;
      reader.readMessage(value,proto.automaton.cog.TableRecord.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    case 5:
      var value = new proto.automaton.cog.BinaryRecord;
      reader.readMessage(value,proto.automaton.cog.BinaryRecord.deserializeBinaryFromReader);
      msg.setBinary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.StepRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.StepRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.StepRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.StepRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeyValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getTable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.automaton.cog.TableRecord.serializeBinaryToWriter
    );
  }
  f = message.getBinary();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.automaton.cog.BinaryRecord.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.automaton.cog.StepRecord.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepRecord} returns this
 */
proto.automaton.cog.StepRecord.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.automaton.cog.StepRecord.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.StepRecord} returns this
 */
proto.automaton.cog.StepRecord.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Struct key_value = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.automaton.cog.StepRecord.prototype.getKeyValue = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.automaton.cog.StepRecord} returns this
*/
proto.automaton.cog.StepRecord.prototype.setKeyValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.automaton.cog.StepRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.StepRecord} returns this
 */
proto.automaton.cog.StepRecord.prototype.clearKeyValue = function() {
  return this.setKeyValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.StepRecord.prototype.hasKeyValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TableRecord table = 4;
 * @return {?proto.automaton.cog.TableRecord}
 */
proto.automaton.cog.StepRecord.prototype.getTable = function() {
  return /** @type{?proto.automaton.cog.TableRecord} */ (
    jspb.Message.getWrapperField(this, proto.automaton.cog.TableRecord, 4));
};


/**
 * @param {?proto.automaton.cog.TableRecord|undefined} value
 * @return {!proto.automaton.cog.StepRecord} returns this
*/
proto.automaton.cog.StepRecord.prototype.setTable = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.automaton.cog.StepRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.StepRecord} returns this
 */
proto.automaton.cog.StepRecord.prototype.clearTable = function() {
  return this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.StepRecord.prototype.hasTable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BinaryRecord binary = 5;
 * @return {?proto.automaton.cog.BinaryRecord}
 */
proto.automaton.cog.StepRecord.prototype.getBinary = function() {
  return /** @type{?proto.automaton.cog.BinaryRecord} */ (
    jspb.Message.getWrapperField(this, proto.automaton.cog.BinaryRecord, 5));
};


/**
 * @param {?proto.automaton.cog.BinaryRecord|undefined} value
 * @return {!proto.automaton.cog.StepRecord} returns this
*/
proto.automaton.cog.StepRecord.prototype.setBinary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.automaton.cog.StepRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.StepRecord} returns this
 */
proto.automaton.cog.StepRecord.prototype.clearBinary = function() {
  return this.setBinary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.StepRecord.prototype.hasBinary = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.automaton.cog.TableRecord.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.TableRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.TableRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.TableRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.TableRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    google_protobuf_struct_pb.Struct.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.TableRecord}
 */
proto.automaton.cog.TableRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.TableRecord;
  return proto.automaton.cog.TableRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.TableRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.TableRecord}
 */
proto.automaton.cog.TableRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.TableRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.TableRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.TableRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.TableRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct headers = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.automaton.cog.TableRecord.prototype.getHeaders = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.automaton.cog.TableRecord} returns this
*/
proto.automaton.cog.TableRecord.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.automaton.cog.TableRecord} returns this
 */
proto.automaton.cog.TableRecord.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.automaton.cog.TableRecord.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated google.protobuf.Struct rows = 2;
 * @return {!Array<!proto.google.protobuf.Struct>}
 */
proto.automaton.cog.TableRecord.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Struct>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Struct>} value
 * @return {!proto.automaton.cog.TableRecord} returns this
*/
proto.automaton.cog.TableRecord.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Struct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Struct}
 */
proto.automaton.cog.TableRecord.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Struct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.automaton.cog.TableRecord} returns this
 */
proto.automaton.cog.TableRecord.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.automaton.cog.BinaryRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.automaton.cog.BinaryRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.automaton.cog.BinaryRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.BinaryRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    mimeType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.automaton.cog.BinaryRecord}
 */
proto.automaton.cog.BinaryRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.automaton.cog.BinaryRecord;
  return proto.automaton.cog.BinaryRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.automaton.cog.BinaryRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.automaton.cog.BinaryRecord}
 */
proto.automaton.cog.BinaryRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.automaton.cog.BinaryRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.automaton.cog.BinaryRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.automaton.cog.BinaryRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.automaton.cog.BinaryRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.automaton.cog.BinaryRecord.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.automaton.cog.BinaryRecord.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.automaton.cog.BinaryRecord.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.automaton.cog.BinaryRecord} returns this
 */
proto.automaton.cog.BinaryRecord.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string mime_type = 2;
 * @return {string}
 */
proto.automaton.cog.BinaryRecord.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.automaton.cog.BinaryRecord} returns this
 */
proto.automaton.cog.BinaryRecord.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.automaton.cog);
